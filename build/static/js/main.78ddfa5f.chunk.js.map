{"version":3,"sources":["providers/firebase.js","screens/tasks/Task.jsx","screens/ageEmpires/AgeEmpires.jsx","screens/ageEmpires/Civilization.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Task","React","useState","state","setState","useEffect","getTasksFire","a","db","firestore","collection","get","data","arrayData","docs","map","doc","id","console","log","tasks","task","onUpdateFire","e","preventDefault","trim","error","update","name","onSaveFirebase","item","Date","now","add","onDeleteFire","delete","className","length","index","onClick","editionMode","onEdit","onSubmit","type","placeholder","value","onChange","target","AgeEmpires","getCivilizations","fetch","json","dataJson","civilizations","civilization","expansion","to","Civilizations","params","useParams","getCivilization","res","army_type","team_bonus","civilization_bonus","bonus","App","activeClassName","path","Civilization","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78ddfa5f.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport 'firebase/firestore'\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDTS1SOOOC0wRlGOR0OtjqQfw88DoRFkc4\",\r\n    authDomain: \"crud-task-udemi.firebaseapp.com\",\r\n    databaseURL: \"https://crud-udemy-react.firebaseio.com\",\r\n    projectId: \"crud-task-udemi\",\r\n    storageBucket: \"crud-task-udemi.appspot.com\",\r\n    messagingSenderId: \"412093418849\",\r\n    appId: \"1:412093418849:web:3374e76abc956240a28920\"\r\n  };\r\n  \r\n  // Initialize Firebase\r\n  const app = firebase.initializeApp(firebaseConfig);\r\n\r\n  export {firebase};","import React from 'react';\r\nimport { nanoid } from 'nanoid'\r\nimport { firebase } from '../../providers/firebase';\r\n//import \"bootstrap/dist/css/bootstrap.min.css\"\r\nfunction Task() {\r\n  const [state, setState] = React.useState({\r\n    \"task\": \"\",\r\n    \"tasks\": [],\r\n    \"editionMode\": false,\r\n    \"id\": \"\",\r\n    \"error\": null,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    getTasksFire();\r\n\r\n  }, [])\r\n  const getTasksFire = async () => {\r\n    try {\r\n      let db = firebase.firestore();\r\n      const data = await db.collection('task_udemy').get();\r\n      const arrayData = data.docs.map(doc => ({ id: doc.id, ...doc.data() }))\r\n      console.log(data.docs);\r\n      console.log(arrayData);\r\n      setState({ ...state, tasks: arrayData, task:\"\" });\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  const handdleChange = (e) => {\r\n\r\n    setState({ ...state, task: e.target.value })\r\n\r\n  };\r\n\r\n  const onUpdate = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (state.task.trim()) {\r\n      let items = state.tasks.map(item => item.id === state.id ? { id: state.id, name: state.task } : item);\r\n      setState({ ...state, tasks: items, error: null });\r\n\r\n    } else {\r\n      setState({ ...state, error: \"Debe ingresar una tarea\" })\r\n    }\r\n  };\r\n\r\n  const onUpdateFire= async(e)=>{\r\n    e.preventDefault();\r\n    if(!state.task.trim()){\r\n      setState({ ...state, error: \"Debe ingresar una tarea\" })\r\n      return;\r\n    }\r\n    let db = firebase.firestore();\r\n    await db.collection('task_udemy').doc(state.id).update({\r\n      name:state.task\r\n    });\r\n    setState({ ...state, error: null });\r\n    getTasksFire();\r\n  }  \r\n\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (state.task.trim()) {\r\n      let items = state.tasks;\r\n      let item = {};\r\n      item = {\r\n        \"id\": nanoid(),\r\n        \"name\": state.task\r\n      };\r\n      items.push(item);\r\n      setState({ ...state, tasks: items, task: \"\", error: null });\r\n      console.log(state.tasks);\r\n\r\n    } else {\r\n      setState({ ...state, error: \"Debe ingresar una tarea\" })\r\n    }\r\n  };\r\n\r\n  const onSaveFirebase= async(e)=>{\r\n    try{\r\n      e.preventDefault();\r\n\r\n      if (state.task.trim()) {\r\n        \r\n        let item = {};\r\n        item = {\r\n          \"name\": state.task,\r\n          \"date\":Date.now()\r\n        };\r\n        const db = firebase.firestore()\r\n        const data = await db.collection('task_udemy').add(item)\r\n        getTasksFire();\r\n        setState({ ...state, task: \"\", error: null });\r\n  \r\n      } else {\r\n        setState({ ...state, error: \"Debe ingresar una tarea\" })\r\n      }\r\n\r\n    }catch(error){\r\n      console.log(error)\r\n\r\n    }\r\n    \r\n\r\n\r\n  };\r\n\r\n  const onDelete = (index) => {\r\n    let items = state.tasks;\r\n    items.splice(index, 1);\r\n    setState({ ...state, tasks: items });\r\n\r\n  };\r\n\r\n  const onDeleteFire = async(id)=>{\r\n    try{\r\n      const db = firebase.firestore()\r\n      await db.collection('task_udemy').doc(id).delete()\r\n      getTasksFire();\r\n\r\n    }catch(error){\r\n      console.log(error)\r\n\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n    const eliminarTarea = id => {\r\n      const arrayFiltrado = tareas.filter(item => item.id !== id)\r\n      setTareas(arrayFiltrado)\r\n    }*/\r\n\r\n  const onEdit = (task) => {\r\n\r\n    setState({ ...state, editionMode: true, task: task.name, id: task.id });\r\n\r\n  };\r\n  const cancelEdition = () => {\r\n\r\n    setState({ ...state, editionMode: false, task: \"\", id: \"\" });\r\n\r\n  };\r\n\r\n  return (\r\n\r\n    <div className=\"container mt-5\" >\r\n      <h1 className=\"text-center\">Proyecto CRUD Tareas</h1>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <div className=\"col-8\">\r\n          <h4 className=\"text-center\">Lista de tareas</h4>\r\n          <ul className=\"list-group\">\r\n            {state.tasks.length > 0 ? (\r\n              state.tasks.map((task, index) => (\r\n                <li className=\"list-group-item\" key={task.id}>\r\n                  <span className=\"lead\">{task.name}  </span>\r\n\r\n                  <button className=\"btn btn-danger bnt-sm float-right\"\r\n                    onClick={() => onDeleteFire(task.id)}\r\n                  >\r\n                    Eliminar\r\n                  </button>\r\n                  <button className=\"btn btn-warning bnt-sm float-right mx-2\"\r\n                    onClick={() => onEdit(task)}\r\n                  >\r\n                    Modificar\r\n                  </button>\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <li className=\"list-group-item\">No hay tareas</li>\r\n\r\n            )}\r\n\r\n\r\n          </ul>\r\n\r\n        </div>\r\n        <div className=\"col-4\">\r\n\r\n          <h4 className=\"text-center\">\r\n            {\r\n              state.editionMode ? (\r\n                <div className=\"row\">\r\n                  Modificar Tarea\r\n                  <button className=\"btn btn-danger bnt-sm float-right\"\r\n                    onClick={cancelEdition}  > x </button>\r\n                </div>\r\n\r\n\r\n\r\n\r\n              ) : (\r\n                \"Agregar Tarea\"\r\n\r\n              )\r\n            }\r\n          </h4>\r\n          <form onSubmit={state.editionMode ? onUpdateFire : onSaveFirebase}>\r\n            {\r\n              state.error ? <span className=\"text-danger\">{state.error}</span> : null\r\n            }\r\n            <input type=\"text\"\r\n              placeholder=\"Ingrese tarea\"\r\n              className=\"form-control mb-2\"\r\n              value={state.task}\r\n              name=\"task\"\r\n              onChange={handdleChange}\r\n            />\r\n\r\n            {\r\n              state.editionMode ? (\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n                  Actualizar\r\n                </button>\r\n              ) : (\r\n                <button type=\"submit\" className=\"btn btn-dark btn-block\">\r\n                  Agregar\r\n                </button>\r\n              )\r\n            }\r\n\r\n\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nfunction AgeEmpires() {\r\n\r\n    const [state, setState] = React.useState({\r\n        'civilizations': null,\r\n    });\r\n\r\n\r\n    React.useEffect(() => {\r\n        getCivilizations();\r\n\r\n    }, []);\r\n\r\n    const getCivilizations = async () => {\r\n\r\n        //https://age-of-empires-2-api.herokuapp.com/api/v1/civilizations\r\n        const data = await fetch('https://age-of-empires-2-api.herokuapp.com/api/v1/civilizations')\r\n        let dataJson = await data.json();\r\n        setState({ ...state, civilizations: dataJson.civilizations });\r\n        \r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-3\">\r\n            <h1 className=\"text-center\">\r\n                Age Of Empires\r\n            </h1>\r\n            {\r\n                <div className=\"row\">\r\n                    <div className=\"container col-8\">\r\n                        <h3 className=\"text-center\">\r\n                            Civilizations\r\n                        </h3>\r\n                        <hr />\r\n\r\n                        <ul className=\"list-group\">\r\n                            {state.civilizations ? (\r\n                                state.civilizations.map((civilization) => (\r\n                                    <li className=\"list-group-item\" key={civilization.id}>\r\n                                        <div className=\"row justify-content-center\">\r\n                                            <div className=\"container col-9\">\r\n                                                <span>{civilization.name}</span>\r\n                                                <hr />\r\n                                                <span>{civilization.expansion}</span>\r\n                                            </div>\r\n                                            <div className=\"container col-3 justify-content-center\">\r\n                                                <div className=\"row h-100 justify-content-center align-items-center\">\r\n                                                    <Link to={`age-empires/${civilization.id}`} className=\"btn btn-outline-info \">\r\n                                                        Detalle\r\n                                                    </Link>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n\r\n\r\n                                    </li>\r\n\r\n                                ))\r\n\r\n\r\n                            ) : (\r\n                                <></>\r\n                            )}\r\n                        </ul>\r\n\r\n                    </div>\r\n                    <container className=\"col-4\">\r\n\r\n                    </container>\r\n                </div>\r\n\r\n\r\n            }\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default AgeEmpires;","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\n\r\nfunction Civilizations(params) {\r\n    \r\n    const {id} = useParams();\r\n    const [state, setState]= React.useState({\r\n        'civilization':null\r\n    });\r\n    useEffect(() => {\r\n        getCivilization();\r\n       \r\n    }, [])\r\n\r\n    const getCivilization=async()=>{\r\n        const res = await fetch(`https://age-of-empires-2-api.herokuapp.com/api/v1/civilization/${id}`);\r\n        const data = await res.json();\r\n        console.log(id);\r\n        setState({...state,civilization:data});\r\n\r\n    };\r\n\r\n\r\n    return(\r\n        <div className=\"container col-12 mt-2\">\r\n            {state.civilization?(\r\n                <>\r\n                <h3 className=\"text-center\">\r\n            {state.civilization?(state.civilization.name):(\"Undefined Civilization\")} </h3>\r\n            <span>\r\n                {state.civilization?(state.civilization.expansion):(\"Undefined Civilization\")}\r\n            </span>\r\n            <div className=\"row\">\r\n                <div className=\"container col-7\">\r\n                    <h5 className=\"text-center\">General information</h5>\r\n                    \r\n                    <div className=\"row\">\r\n                        <p className=\"font-weight-bold mr-2\">Army type : </p>\r\n                        <div className=\"span\">{state.civilization.army_type}</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p className=\"font-weight-bold mr-2\">Team bonus : </p>\r\n                        <div className=\"span\">{state.civilization.team_bonus}</div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <p className=\"font-weight-bold mr-2\">Civilization bonus : </p> <br />\r\n                        {state.civilization.civilization_bonus&&state.civilization.civilization_bonus.length>0?(\r\n                            state.civilization.civilization_bonus.map((bonus, index)=>(\r\n                                <li key={index}>{bonus}</li>\r\n\r\n                            ))\r\n\r\n                        ):(\r\n                            \"No Civilization Bonus\"\r\n\r\n                        )}\r\n                        \r\n                    </div>\r\n\r\n                    \r\n                \r\n                </div>\r\n                <div className=\"container col-3\">\r\n\r\n\r\n                </div>\r\n\r\n                \r\n            </div>\r\n                </>\r\n\r\n            ):(\r\n                <span className=\"text-center\">\r\n                    No Data\r\n                </span>\r\n            )}\r\n            \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Civilizations;","import './App.css';\nimport React from 'react';\nimport Task from './screens/tasks/Task';\nimport AgeEmpires from './screens/ageEmpires/AgeEmpires'\nimport Civilizations from './screens/ageEmpires/Civilization';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n  Link\n} from \"react-router-dom\";\n//import \"bootstrap/dist/css/bootstrap.min.css\"\nfunction App() {\n\n\n  return (\n\n\n    <Router>\n      <div className=\"container mt-5 col-10\" >\n        <div className=\"btn-group\">\n          <NavLink to=\"/\" className=\"btn btn-dark\" activeClassName=\"active\">\n            Inicio\n          </NavLink >\n          <Link to=\"/task\" className=\"btn btn-dark\" >\n            Tasks\n          </Link>\n          <Link to=\"/age-empires\" className=\"btn btn-dark\">\n            Age of Empires\n          </Link>\n\n        </div>\n        <Switch>\n          <Route path=\"/task\">\n            <Task></Task>\n\n          </Route>\n          <Route path=\"/age-empires/:id\">\n            <Civilizations></Civilizations>\n          </Route>\n          <Route path=\"/age-empires\">\n            <AgeEmpires>\n\n            </AgeEmpires>\n          </Route>\n          <Route path=\"/\" exact>\n            <div className=\"container mt-10\">\n              Página de inicio\n            </div>\n          </Route>\n\n        </Switch>\n      </div>\n    </Router>\n\n\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}